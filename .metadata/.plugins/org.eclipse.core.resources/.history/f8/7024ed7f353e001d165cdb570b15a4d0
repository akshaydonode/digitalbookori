package com.cts.digitalbook.digitalbookreaderservice.services;

import java.util.Objects;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cts.digitalbook.digitalbookauthorservice.exceptions.DigitalBookException;
import com.cts.digitalbook.digitalbookreaderservice.dtos.BookSubscribeDTO;
import com.cts.digitalbook.digitalbookreaderservice.entities.ReaderEntity;
import com.cts.digitalbook.digitalbookreaderservice.entities.SubscriptionEntity;
import com.cts.digitalbook.digitalbookreaderservice.repositories.ReaderRepository;

@Service
public class ReaderServiceImpl implements ReaderService {

	@Autowired
	ReaderRepository readerRepository;

	@Override
	public ReaderEntity addReader(ReaderEntity readerEntity) throws DigitalBookException {

		Optional<ReaderEntity> readerEntity2 = readerRepository.getReaderByEmail(readerEntity.getReaderEmail());

		if (readerEntity2.isEmpty()) {
			return readerRepository.save(readerEntity);
		} else {
			throw new DigitalBookException("Reader is exit...");
		}

	}

	public ReaderEntity getReader(String readerEmail) {
		return readerRepository.getReaderByEmail(readerEmail);
	}
	@Override
	public SubscriptionEntity bookSubscribe(BookSubscribeDTO bookSubscribeDTO) throws DigitalBookException {
		if(Objects.nonNull(bookSubscribeDTO)) {
			if(Objects.isNull(bookSubscribeDTO.getReaderId())) {
				
			}else {
				
			}
			
		}else {
			throw new DigitalBookException("BookSubcriptionDTO is null, please retry again...");
		}

	}

}
