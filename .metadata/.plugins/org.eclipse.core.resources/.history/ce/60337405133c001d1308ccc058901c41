package com.cts.digitalbook.digitalbookauthorservice.entities.services;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cts.digitalbook.digitalbookauthorservice.dtos.AuthorLoginDTO;
import com.cts.digitalbook.digitalbookauthorservice.entities.AuthorEntity;
import com.cts.digitalbook.digitalbookauthorservice.entities.exceptions.DigitalBookException;
import com.cts.digitalbook.digitalbookauthorservice.entities.repositories.AuthorRepository;

@Service
public class AuthorServiceImpl implements AuthorService {

	@Autowired
	AuthorRepository authorRepository;

	@Override
	public String registerAuthor(AuthorEntity authorEntity) throws DigitalBookException {

		if (!authorEntity.getAuthorEmail().isEmpty() && !authorEntity.getPassword().isEmpty()
				&& !authorEntity.getAuthorName().isEmpty()) {

			Optional<AuthorEntity> optionalAuthor = authorRepository.findByEmailId(authorEntity.getAuthorEmail());
			if (!optionalAuthor.isEmpty()) {

				AuthorEntity newAuthorEntity = new AuthorEntity();

				newAuthorEntity.setAuthorEmail(authorEntity.getAuthorEmail().toLowerCase());
				newAuthorEntity.setAuthorName(authorEntity.getAuthorName());
				newAuthorEntity.setPassword(authorEntity.getPassword());

				authorRepository.save(newAuthorEntity);

			} else {
				throw new DigitalBookException(
						"Author EmailID id already Exit. Please use the same or create new account. Thank You !!!");
			}

			return "Author Registered Successfully...";
		} else {

			throw new DigitalBookException(
					"Author Registration Failed. PLease fill all the fileds like Name, EmailID, Password. Thank You !!!");

		}
	}

	@Override
	public String authorLogin(AuthorLoginDTO authorLoginDTO) throws DigitalBookException {
		Optional<AuthorEntity> optionalAuthor = authorRepository.findByEmailId(authorLoginDTO.getAuthorEmail());

		if (!optionalAuthor.isEmpty()) {
			if (optionalAuthor.get().getPassword().equals(authorLoginDTO.getPassword())) {
				return "Author Login successfully";
			} else {
				throw new DigitalBookException("Please enter the correct password.");
			}
		} else {
			return "Author Not Registered. Please register Author";
		}

	}
}
